<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ROS on Halo</title>
    <link>https://guoguoguo98.github.io/tags/ros/</link>
    <description>Recent content in ROS on Halo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 21 Apr 2023 09:35:03 +0800</lastBuildDate><atom:link href="https://guoguoguo98.github.io/tags/ros/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一步步教你掌握 Gmapping：ROS 里的 SLAM 神器</title>
      <link>https://guoguoguo98.github.io/posts/%E5%88%9D%E8%AF%86gmapping/</link>
      <pubDate>Fri, 21 Apr 2023 09:35:03 +0800</pubDate>
      
      <guid>https://guoguoguo98.github.io/posts/%E5%88%9D%E8%AF%86gmapping/</guid>
      <description>一、Gmapping 简介 Gmapping 是一款基于 ROS 的开源 SLAM 算法，它采用激光雷达数据进行地图创建和机器人定位。Gmapping 使用格子贝叶斯滤波器 (Grid-based FastSLAM) 算法，具有较高的地图精度和实时性。通过使用 Gmapping，可以实现室内外环境的实时建图和定位。
二、环境配置 系统要求：本教程以 Ubuntu 18.04 为例，同时需要安装 ROS Melodic。如果你还没有安装 ROS，请参考 ROS 官方安装教程。
安装依赖包：在安装 Gmapping 之前，需要先安装以下依赖包：
sudo apt-get install ros-melodic-slam-gmapping sudo apt-get install ros-melodic-turtlebot3 sudo apt-get install ros-melodic-turtlebot3-simulations sudo apt-get install ros-melodic-turtlebot3-navigation 创建工作空间：
mkdir -p ~/catkin_ws/src cd ~/catkin_ws/src catkin_init_workspace cd ~/catkin_ws catkin_make 然后将工作空间添加到 ~/.bashrc：
echo &amp;#34;source ~/catkin_ws/devel/setup.bash&amp;#34; &amp;gt;&amp;gt; ~/.bashrc source ~/.bashrc 三、运行 Gmapping 示例 首先，启动 TurtleBot3 模拟器：
export TURTLEBOT3_MODEL=burger roslaunch turtlebot3_gazebo turtlebot3_world.</description>
    </item>
    
    <item>
      <title>Cartographer 入门教程：从安装到实践技巧一站式指南</title>
      <link>https://guoguoguo98.github.io/posts/%E5%88%9D%E8%AF%86cartographer/</link>
      <pubDate>Thu, 20 Apr 2023 23:45:34 +0800</pubDate>
      
      <guid>https://guoguoguo98.github.io/posts/%E5%88%9D%E8%AF%86cartographer/</guid>
      <description>一、安装 1.1 安装依赖项 首先，我们需要安装一些依赖项。在终端中输入以下命令：
sudo apt-get update sudo apt-get install -y python-wstool python-rosdep ninja-build 1.2 安装 Cartographer ROS 接下来，创建一个新的工作空间并获取 Cartographer ROS 代码：
mkdir -p ~/catkin_ws/src cd ~/catkin_ws/src git clone https://github.com/cartographer-project/cartographer_ros.git 1.3 安装所有必要的依赖项 使用 rosdep 安装所有必要的依赖项：
cd ~/catkin_ws rosdep update rosdep install --from-paths src --ignore-src --rosdistro=${ROS_DISTRO} -y 1.4 构建 Cartographer ROS 现在构建 Cartographer ROS：
cd ~/catkin_ws catkin_make_isolated --install --use-ninja 1.5 更新环境变量 最后，将新安装的软件包添加到 ROS_PACKAGE_PATH 环境变量中：
source ~/catkin_ws/install_isolated/setup.bash 二、使用 2.1 下载测试数据 为了快速验证安装是否成功，可以下载官方提供的测试数据：
wget -P ~/Downloads https://storage.</description>
    </item>
    
  </channel>
</rss>
